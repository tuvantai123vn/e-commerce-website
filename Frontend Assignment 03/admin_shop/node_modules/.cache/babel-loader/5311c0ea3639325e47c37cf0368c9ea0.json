{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Volumes/document/GitHub/ASM3/Frontend Assignment 03/admin_shop/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport { BrowserRouter, Route, Switch, useHistory, Redirect } from \"react-router-dom\";\nimport Chat from \"./Chat/Chat\";\nimport Header from \"./Header/Header\";\nimport History from \"./History/History\";\nimport Home from \"./Home/Home\";\nimport Menu from \"./Menu/Menu\";\nimport Products from \"./Products/Products\";\nimport Users from \"./Users/Users\";\nimport NewProduct from \"./New/NewProduct\";\nimport Update from \"./update/update\";\nimport { useEffect, useState } from \"react\";\nimport Login from \"./Login/Login\";\nimport jwt_decode from \"jwt-decode\"; // Sử dụng thư viện để giải mã JWT Token\n\nimport Cookies from \"universal-cookie\";\n\nfunction App() {\n  _s();\n\n  const cookies = new Cookies();\n  const history = useHistory();\n  useEffect(() => {\n    const token = cookies.get(\"accessToken\");\n\n    if (token) {\n      const decodedToken = jwt_decode(token);\n      const {\n        role\n      } = decodedToken;\n      console.log(decodedToken);\n\n      if (role !== 'admin') {\n        history.push(\"/login\");\n      }\n    }\n  }, []);\n\n  const ProtectedRoute = ({\n    component: Component,\n    isAdmin,\n    ...rest\n  }) => /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => isAdmin ? /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 46\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"main-wrapper\",\n        \"data-theme\": \"light\",\n        \"data-layout\": \"vertical\",\n        \"data-navbarbg\": \"skin6\",\n        \"data-sidebartype\": \"full\",\n        \"data-sidebar-position\": \"fixed\",\n        \"data-header-position\": \"fixed\",\n        \"data-boxed-layout\": \"full\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            component: Home\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/chat\",\n            component: Chat\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            component: Login\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            path: \"/users\",\n            component: Users,\n            isAdmin: true // Only admin can access this route\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            exact: true,\n            path: \"/products\",\n            component: Products,\n            isAdmin: true // Only admin can access this route\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            path: \"/new\",\n            component: NewProduct,\n            isAdmin: true // Only admin can access this route\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            path: \"/history\",\n            component: History,\n            isAdmin: true // Only admin can access this route\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            path: \"/products/view-edit/:id\",\n            component: Update,\n            isAdmin: true // Only admin can access this route\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"bz2N+u0mX89LO9zOCfVCA9Sa20M=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Volumes/document/GitHub/ASM3/Frontend Assignment 03/admin_shop/src/App.jsx"],"names":["BrowserRouter","Route","Switch","useHistory","Redirect","Chat","Header","History","Home","Menu","Products","Users","NewProduct","Update","useEffect","useState","Login","jwt_decode","Cookies","App","cookies","history","token","get","decodedToken","role","console","log","push","ProtectedRoute","component","Component","isAdmin","rest","props"],"mappings":";;;;;AAAA,SAASA,aAAT,EAAwBC,KAAxB,EAA+BC,MAA/B,EAAuCC,UAAvC,EAAmDC,QAAnD,QAAmE,kBAAnE;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CAAqC;;AACrC,OAAOC,OAAP,MAAoB,kBAApB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,OAAO,GAAG,IAAIF,OAAJ,EAAhB;AACA,QAAMG,OAAO,GAAGlB,UAAU,EAA1B;AAEAW,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,KAAK,GAAGF,OAAO,CAACG,GAAR,CAAY,aAAZ,CAAd;;AAEA,QAAID,KAAJ,EAAW;AACT,YAAME,YAAY,GAAGP,UAAU,CAACK,KAAD,CAA/B;AACA,YAAM;AAACG,QAAAA;AAAD,UAASD,YAAf;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYH,YAAZ;;AACA,UAAGC,IAAI,KAAG,OAAV,EAAkB;AAChBJ,QAAAA,OAAO,CAACO,IAAR,CAAa,QAAb;AACD;AAEF;AACF,GAZQ,EAYN,EAZM,CAAT;;AAaA,QAAMC,cAAc,GAAG,CAAC;AAAEC,IAAAA,SAAS,EAAEC,SAAb;AAAwBC,IAAAA,OAAxB;AAAiC,OAAGC;AAApC,GAAD,kBACrB,QAAC,KAAD,OACMA,IADN;AAEE,IAAA,MAAM,EAAGC,KAAD,IACNF,OAAO,gBAAG,QAAC,SAAD,OAAeE;AAAf;AAAA;AAAA;AAAA;AAAA,YAAH,gBAA8B,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAHzC;AAAA;AAAA;AAAA;AAAA,UADF;;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE,QAAC,aAAD;AAAA,6BACE;AACE,QAAA,EAAE,EAAC,cADL;AAEE,sBAAW,OAFb;AAGE,uBAAY,UAHd;AAIE,yBAAc,OAJhB;AAKE,4BAAiB,MALnB;AAME,iCAAsB,OANxB;AAOE,gCAAqB,OAPvB;AAQE,6BAAkB,MARpB;AAAA,gCAUE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBAVF,eAWE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,gBAXF,eAYE,QAAC,MAAD;AAAA,kCACE,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAC,GAAlB;AAAsB,YAAA,SAAS,EAAE1B;AAAjC;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,OAAZ;AAAoB,YAAA,SAAS,EAAEH;AAA/B;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,QAAZ;AAAqB,YAAA,SAAS,EAAEW;AAAhC;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE,QAAC,cAAD;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,SAAS,EAAEL,KAFb;AAGE,YAAA,OAAO,EAAE,IAHX,CAGiB;;AAHjB;AAAA;AAAA;AAAA;AAAA,kBAJF,eASE,QAAC,cAAD;AACE,YAAA,KAAK,MADP;AAEE,YAAA,IAAI,EAAC,WAFP;AAGE,YAAA,SAAS,EAAED,QAHb;AAIE,YAAA,OAAO,EAAE,IAJX,CAIiB;;AAJjB;AAAA;AAAA;AAAA;AAAA,kBATF,eAeE,QAAC,cAAD;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,SAAS,EAAEE,UAFb;AAGE,YAAA,OAAO,EAAE,IAHX,CAGiB;;AAHjB;AAAA;AAAA;AAAA;AAAA,kBAfF,eAoBE,QAAC,cAAD;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,SAAS,EAAEL,OAFb;AAGE,YAAA,OAAO,EAAE,IAHX,CAGiB;;AAHjB;AAAA;AAAA;AAAA;AAAA,kBApBF,eAyBE,QAAC,cAAD;AACE,YAAA,IAAI,EAAC,yBADP;AAEE,YAAA,SAAS,EAAEM,MAFb;AAGE,YAAA,OAAO,EAAE,IAHX,CAGiB;;AAHjB;AAAA;AAAA;AAAA;AAAA,kBAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkDD;;GA5EQM,G;UAEShB,U;;;KAFTgB,G;AA8ET,eAAeA,GAAf","sourcesContent":["import { BrowserRouter, Route, Switch, useHistory, Redirect } from \"react-router-dom\";\r\nimport Chat from \"./Chat/Chat\";\r\nimport Header from \"./Header/Header\";\r\nimport History from \"./History/History\";\r\nimport Home from \"./Home/Home\";\r\nimport Menu from \"./Menu/Menu\";\r\nimport Products from \"./Products/Products\";\r\nimport Users from \"./Users/Users\";\r\nimport NewProduct from \"./New/NewProduct\";\r\nimport Update from \"./update/update\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Login from \"./Login/Login\";\r\nimport jwt_decode from \"jwt-decode\"; // Sử dụng thư viện để giải mã JWT Token\r\nimport Cookies from \"universal-cookie\";\r\n\r\nfunction App() {\r\n  const cookies = new Cookies();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const token = cookies.get(\"accessToken\");\r\n    \r\n    if (token) {\r\n      const decodedToken = jwt_decode(token);\r\n      const {role} = decodedToken;\r\n      console.log(decodedToken);\r\n      if(role!=='admin'){\r\n        history.push(\"/login\");\r\n      }\r\n\r\n    }\r\n  }, []);\r\n  const ProtectedRoute = ({ component: Component, isAdmin, ...rest }) => (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isAdmin ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }\r\n    />\r\n  );\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <BrowserRouter>\r\n        <div\r\n          id=\"main-wrapper\"\r\n          data-theme=\"light\"\r\n          data-layout=\"vertical\"\r\n          data-navbarbg=\"skin6\"\r\n          data-sidebartype=\"full\"\r\n          data-sidebar-position=\"fixed\"\r\n          data-header-position=\"fixed\"\r\n          data-boxed-layout=\"full\"\r\n        >\r\n          <Header />\r\n          <Menu />\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route path=\"/chat\" component={Chat} />\r\n            <Route path=\"/login\" component={Login} />\r\n            <ProtectedRoute\r\n              path=\"/users\"\r\n              component={Users}\r\n              isAdmin={true} // Only admin can access this route\r\n            />\r\n            <ProtectedRoute\r\n              exact\r\n              path=\"/products\"\r\n              component={Products}\r\n              isAdmin={true} // Only admin can access this route\r\n            />\r\n            <ProtectedRoute\r\n              path=\"/new\"\r\n              component={NewProduct}\r\n              isAdmin={true} // Only admin can access this route\r\n            />\r\n            <ProtectedRoute\r\n              path=\"/history\"\r\n              component={History}\r\n              isAdmin={true} // Only admin can access this route\r\n            />\r\n            <ProtectedRoute\r\n              path=\"/products/view-edit/:id\"\r\n              component={Update}\r\n              isAdmin={true} // Only admin can access this route\r\n            />\r\n          </Switch>\r\n        </div>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}