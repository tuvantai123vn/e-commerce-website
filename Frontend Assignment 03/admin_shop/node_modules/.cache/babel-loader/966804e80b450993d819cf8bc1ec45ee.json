{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Volumes/document/GitHub/ASM3/Frontend Assignment 03/admin_shop/src/Login/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\"; // import { useDispatch, useSelector } from \"react-redux\";\n\nimport { Link, Redirect } from \"react-router-dom\";\nimport \"./Login.css\";\nimport queryString from \"query-string\";\n\nfunction Login() {\n  _s();\n\n  //listCart được lấy từ redux\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorEmail, setErrorEmail] = useState(false);\n  const [emailRegex, setEmailRegex] = useState(false);\n  const [errorPassword, setErrorPassword] = useState(false);\n  const [checkPush, setCheckPush] = useState(false);\n  const [errorLogin, setErrorLogin] = useState(false);\n  const [data, setData] = useState([]); // const history = useHistory();\n  //   const dispatch = useDispatch();\n\n  const onChangeEmail = e => {\n    setEmail(e.target.value);\n  };\n\n  const onChangePassword = e => {\n    setPassword(e.target.value);\n  };\n\n  const onSubmit = async () => {\n    setErrorEmail(false);\n    setErrorPassword(false);\n    setEmailRegex(false);\n\n    if (!email) {\n      setErrorEmail(true);\n    } else if (!validateEmail(email)) {\n      setEmailRegex(true);\n    } else if (!password) {\n      setErrorPassword(true);\n    } else if (email && validateEmail(email) && password) {\n      try {\n        const response = await fetch(\"http://localhost:5001/auth/login\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            email,\n            password\n          }),\n          credentials: \"include\" // Bật chia sẻ nguồn tài nguyên qua miền\n\n        });\n        const responseData = await response.json();\n        console.log(responseData);\n\n        if (response.ok && responseData._id) {\n          localStorage.setItem(\"id_user\", responseData._id);\n          localStorage.setItem(\"name_user\", responseData.fullName);\n          setCheckPush(true);\n        } else {\n          setErrorLogin(true);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }; //Hàm này dùng để đưa hết tất cả carts vào API của user\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"limiter\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-login100\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrap-input100 validate-input\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input100\",\n          type: \"text\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: onChangeEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrap-input100 rs1 validate-input\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input100\",\n          type: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: onChangePassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-login100-form-btn m-t-20\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"login100-form-btn\",\n          onClick: onSubmit,\n          children: \"Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"K267F1kHaK+tulLdUS7PiAftgyU=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Volumes/document/GitHub/ASM3/Frontend Assignment 03/admin_shop/src/Login/Login.jsx"],"names":["React","useEffect","useState","Link","Redirect","queryString","Login","email","setEmail","password","setPassword","errorEmail","setErrorEmail","emailRegex","setEmailRegex","errorPassword","setErrorPassword","checkPush","setCheckPush","errorLogin","setErrorLogin","data","setData","onChangeEmail","e","target","value","onChangePassword","onSubmit","validateEmail","response","fetch","method","headers","body","JSON","stringify","credentials","responseData","json","console","log","ok","_id","localStorage","setItem","fullName","error"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n// import { useDispatch, useSelector } from \"react-redux\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport \"./Login.css\";\nimport queryString from \"query-string\";\n\nfunction Login() {\n  //listCart được lấy từ redux\n\n  const [email, setEmail] = useState(\"\");\n\n  const [password, setPassword] = useState(\"\");\n  const [errorEmail, setErrorEmail] = useState(false);\n  const [emailRegex, setEmailRegex] = useState(false);\n  const [errorPassword, setErrorPassword] = useState(false);\n  const [checkPush, setCheckPush] = useState(false);\n  const [errorLogin, setErrorLogin] = useState(false);\n  const [data, setData] = useState([]);\n\n  // const history = useHistory();\n\n  //   const dispatch = useDispatch();\n\n  const onChangeEmail = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const onChangePassword = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const onSubmit = async () => {\n    setErrorEmail(false);\n    setErrorPassword(false);\n    setEmailRegex(false);\n\n    if (!email) {\n      setErrorEmail(true);\n    } else if (!validateEmail(email)) {\n      setEmailRegex(true);\n    } else if (!password) {\n      setErrorPassword(true);\n    } else if (email && validateEmail(email) && password) {\n      try {\n        const response = await fetch(\"http://localhost:5001/auth/login\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ email, password }),\n          credentials: \"include\", // Bật chia sẻ nguồn tài nguyên qua miền\n        });\n\n        const responseData = await response.json();\n        console.log(responseData);\n\n        if (response.ok && responseData._id) {\n          localStorage.setItem(\"id_user\", responseData._id);\n          localStorage.setItem(\"name_user\", responseData.fullName);\n          setCheckPush(true);\n        } else {\n          setErrorLogin(true);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  //Hàm này dùng để đưa hết tất cả carts vào API của user\n\n\n  return (\n    <div className=\"limiter\">\n      <div className=\"container-login100\">\n        <div className=\"wrap-input100 validate-input\">\n          <input\n            className=\"input100\"\n            type=\"text\"\n            placeholder=\"Email\"\n            value={email}\n            onChange={onChangeEmail}\n          />\n        </div>\n\n        <div className=\"wrap-input100 rs1 validate-input\">\n          <input\n            className=\"input100\"\n            type=\"password\"\n            placeholder=\"Password\"\n            value={password}\n            onChange={onChangePassword}\n          />\n        </div>\n\n        <div className=\"container-login100-form-btn m-t-20\">\n          <button className=\"login100-form-btn\" onClick={onSubmit}>\n            Sign in\n          </button>\n        </div>\n\n        {/* <div className=\"text-center p-t-45 p-b-4\">\n            <span className=\"txt1\">Create an account?</span>\n            &nbsp;\n            <Link to=\"/signup\" className=\"txt2 hov1\">\n              Sign up\n            </Link>\n          </div> */}\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}