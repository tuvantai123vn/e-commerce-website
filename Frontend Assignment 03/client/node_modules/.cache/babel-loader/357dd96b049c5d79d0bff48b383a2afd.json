{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Volumes/document/GitHub/ASM3/Frontend Assignment 03/client/src/Authentication/Name.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\"; // Sử dụng thư viện để giải mã JWT Token\n\nimport Cookies from \"universal-cookie\";\n\nfunction Name(props) {\n  _s();\n\n  const [userName, setUserName] = useState(\"\");\n  const cookies = new Cookies();\n  useEffect(() => {\n    const token = cookies.get(\"accessToken\"); // Sử dụng \"accessToken\" thay vì \"accesToken\"\n\n    if (token) {\n      const decodedToken = jwt_decode(token);\n      const {\n        name\n      } = decodedToken; // Giả sử thông tin người dùng được lưu trong \"name\" field của JWT Token\n\n      setUserName(name); // Cập nhật state để hiển thị tên người dùng\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"nav-item dropdown\",\n    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n      className: \"nav-link dropdown-toggle\",\n      style: {\n        cursor: \"pointer\"\n      },\n      id: \"pagesDropdown\",\n      \"data-toggle\": \"dropdown\",\n      \"aria-haspopup\": \"true\",\n      \"aria-expanded\": \"false\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-user-alt mr-1 text-gray\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), userName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-menu mt-3\",\n      \"aria-labelledby\": \"pagesDropdown\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        className: \"dropdown-item border-0 transition-link\",\n        to: \"/history\",\n        children: \"History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Name, \"vEaHZE0e+1CQqj4bSOnm7luv5+Q=\");\n\n_c = Name;\nexport default Name;\n\nvar _c;\n\n$RefreshReg$(_c, \"Name\");","map":{"version":3,"sources":["/Volumes/document/GitHub/ASM3/Frontend Assignment 03/client/src/Authentication/Name.jsx"],"names":["React","useEffect","useState","Link","jwt_decode","Cookies","Name","props","userName","setUserName","cookies","token","get","decodedToken","name","cursor"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CAAqC;;AACrC,OAAOC,OAAP,MAAoB,kBAApB;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACnB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMQ,OAAO,GAAG,IAAIL,OAAJ,EAAhB;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,KAAK,GAAGD,OAAO,CAACE,GAAR,CAAY,aAAZ,CAAd,CADc,CAC4B;;AAE1C,QAAID,KAAJ,EAAW;AACT,YAAME,YAAY,GAAGT,UAAU,CAACO,KAAD,CAA/B;AACA,YAAM;AAAEG,QAAAA;AAAF,UAAWD,YAAjB,CAFS,CAEsB;;AAE/BJ,MAAAA,WAAW,CAACK,IAAD,CAAX,CAJS,CAIU;AACpB;AACF,GATQ,EASN,EATM,CAAT;AAWA,sBACE;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA,4BACE;AACE,MAAA,SAAS,EAAC,0BADZ;AAEE,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAFT;AAGE,MAAA,EAAE,EAAC,eAHL;AAIE,qBAAY,UAJd;AAKE,uBAAc,MALhB;AAME,uBAAc,OANhB;AAAA,8BAQE;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cARF,EASGP,QATH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAYE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAoC,yBAAgB,eAApD;AAAA,6BACE,QAAC,IAAD;AACE,QAAA,SAAS,EAAC,wCADZ;AAEE,QAAA,EAAE,EAAE,UAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;GAtCQF,I;;KAAAA,I;AAwCT,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\"; // Sử dụng thư viện để giải mã JWT Token\nimport Cookies from \"universal-cookie\";\n\nfunction Name(props) {\n  const [userName, setUserName] = useState(\"\");\n  const cookies = new Cookies();\n\n  useEffect(() => {\n    const token = cookies.get(\"accessToken\"); // Sử dụng \"accessToken\" thay vì \"accesToken\"\n    \n    if (token) {\n      const decodedToken = jwt_decode(token);\n      const { name } = decodedToken; // Giả sử thông tin người dùng được lưu trong \"name\" field của JWT Token\n\n      setUserName(name); // Cập nhật state để hiển thị tên người dùng\n    }\n  }, []);\n\n  return (\n    <li className=\"nav-item dropdown\">\n      <a\n        className=\"nav-link dropdown-toggle\"\n        style={{ cursor: \"pointer\" }}\n        id=\"pagesDropdown\"\n        data-toggle=\"dropdown\"\n        aria-haspopup=\"true\"\n        aria-expanded=\"false\"\n      >\n        <i className=\"fas fa-user-alt mr-1 text-gray\"></i>\n        {userName}\n      </a>\n      <div className=\"dropdown-menu mt-3\" aria-labelledby=\"pagesDropdown\">\n        <Link\n          className=\"dropdown-item border-0 transition-link\"\n          to={\"/history\"}\n        >\n          History\n        </Link>\n      </div>\n    </li>\n  );\n}\n\nexport default Name;\n"]},"metadata":{},"sourceType":"module"}