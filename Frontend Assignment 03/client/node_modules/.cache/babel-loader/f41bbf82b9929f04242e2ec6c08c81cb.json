{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Volumes/document/GitHub/ASM3/Frontend Assignment 03/client/src/Share/Chat/Chat.jsx\",\n    _s = $RefreshSig$();\n\n// import React, { useState, useEffect, useRef } from \"react\";\n// import socketIOClient from \"socket.io-client\";\n// import './Chat.css'\n// const host = \"http://localhost:5001\";\n// function Chat() {\n//   const [mess, setMess] = useState([]);\n//   const [message, setMessage] = useState('');\n//   const [id, setId] = useState();\n//   const socketRef = useRef();\n//   const messagesEnd = useRef();\n//   useEffect(() => {\n//     socketRef.current = socketIOClient.connect(host)\n//     socketRef.current.on('getId', data => {\n//       setId(data)\n//     })\n//     socketRef.current.on('sendDataServer', dataGot => {\n//       setMess(oldMsgs => [...oldMsgs, dataGot.data])\n//       scrollToBottom()\n//     })\n//     return () => {\n//       socketRef.current.disconnect();\n//     };\n//   }, []);\n//   const sendMessage = () => {\n//     if(message !== null) {\n//       const msg = {\n//         content: message, \n//         id: id\n//       }\n//       socketRef.current.emit('sendDataClient', msg)\n//       setMessage('')\n//     }\n//   }\n//   const scrollToBottom = () => {\n//     messagesEnd.current.scrollIntoView({ behavior: \"smooth\" });\n//   }\n//   const handleChange = (e) => {\n//     setMessage(e.target.value)\n//   }\n//   const onEnterPress = (e) => {\n//     if(e.keyCode == 13 && e.shiftKey == false) {\n//       sendMessage()\n//     }\n//   }\n//     return (\n//         <>\n//                 <div>\n//                     <div className=\"wrapper_chat\">\n//                         <div className=\"chat_messenger\" onClick={onChat}>\n//                             <svg x=\"0\" y=\"0\" width=\"60px\" height=\"60px\"><g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n//                                 <g>\n//                                     <circle fill=\"#383838\" cx=\"30\" cy=\"30\" r=\"30\"></circle>\n//                                     <svg x=\"10\" y=\"10\">\n//                                         <g transform=\"translate(0.000000, -10.000000)\" fill=\"#FFFFFF\">\n//                                             <g id=\"logo\" transform=\"translate(0.000000, 10.000000)\">\n//                                                 <path d=\"M20,0 C31.2666,0 40,8.2528 40,19.4 C40,30.5472 31.2666,38.8 \n//                                         20,38.8 C17.9763,38.8 16.0348,38.5327 14.2106,38.0311 C13.856,37.9335 13.4789,37.9612 \n//                                         13.1424,38.1098 L9.1727,39.8621 C8.1343,40.3205 6.9621,39.5819 6.9273,38.4474 L6.8184,34.8894 \n//                                         C6.805,34.4513 6.6078,34.0414 6.2811,33.7492 C2.3896,30.2691 0,25.2307 0,19.4 C0,8.2528 8.7334,0 \n//                                         20,0 Z M7.99009,25.07344 C7.42629,25.96794 8.52579,26.97594 9.36809,26.33674 L15.67879,21.54734 \n//                                         C16.10569,21.22334 16.69559,21.22164 17.12429,21.54314 L21.79709,25.04774 C23.19919,26.09944 \n//                                         25.20039,25.73014 26.13499,24.24744 L32.00999,14.92654 C32.57369,14.03204 31.47419,13.02404 \n//                                         30.63189,13.66324 L24.32119,18.45264 C23.89429,18.77664 23.30439,18.77834 22.87569,18.45674 \n//                                         L18.20299,14.95224 C16.80079,13.90064 14.79959,14.26984 13.86509,15.75264 L7.99009,25.07344 Z\">\n//                                                 </path>\n//                                             </g>\n//                                         </g>\n//                                     </svg>\n//                                 </g>\n//                             </g>\n//                             </svg>\n//                         </div>\n//                     </div>\n//                     {\n//                         activeChat && (\n//                             <div className='active_chat animate__animated animate__jackInTheBox'>\n//                                 <div style={{ width: '100%' }}>\n//                                     <div className=\"card card-bordered fix_boderChat\">\n//                                         <div className=\"card-header\">\n//                                             <h4 className=\"card-title\"><strong>Customer Support</strong></h4> <a className=\"btn btn-xs btn-secondary\" href=\"#\">Let's Chat App</a>\n//                                         </div>\n//                                         <div className=\"ps-container ps-theme-default ps-active-y fix_scoll\">\n//                                             {\n//                                                 message && message.map(value => (\n//                                                     value.category === 'send' ? (\n//                                                         <div className=\"media media-chat media-chat-reverse\" key={value.id}>\n//                                                             <div className=\"media-body\">\n//                                                                 <p>{value.message}</p>\n//                                                             </div>\n//                                                         </div>\n//                                                     ) : (\n//                                                         <div className=\"media media-chat\" key={value.id}> <img className=\"avatar\" src=\"https://img.icons8.com/color/36/000000/administrator-male.png\" alt=\"...\" />\n//                                                             <div className=\"media-body\" key={value.id}>\n//                                                                 <p>ADMIN: {value.message}</p>\n//                                                             </div>\n//                                                         </div>\n//                                                     )\n//                                                 ))\n//                                             }\n//                                         </div>\n//                                         <div className=\"publisher bt-1 border-light\">\n//                                             <img className=\"avatar avatar-xs\" src=\"https://img.icons8.com/color/36/000000/administrator-male.png\" alt=\"...\" />\n//                                             <input type=\"text\" placeholder=\"Enter Message!\" onChange={onChangeText} value={textMessage} />\n//                                             <span className=\"publisher-btn file-group\">\n//                                                 <i className=\"fa fa-paperclip file-browser\"></i>\n//                                                 <input type=\"file\" />\n//                                             </span>\n//                                             <a className=\"publisher-btn\" href=\"#\" data-abc=\"true\">\n//                                                 <i className=\"fa fa-smile\"></i>\n//                                             </a>\n//                                             <a onClick={handlerSend} className=\"publisher-btn text-info\" data-abc=\"true\">\n//                                                 <i className=\"fa fa-paper-plane\"></i>\n//                                             </a>\n//                                         </div>\n//                                     </div>\n//                                 </div>\n//                             </div>\n//                         )\n//                     }\n//                 </div>\n//         </>\n//     );\n// }\n// export default Chat;\nimport React, { useState, useEffect, useRef } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport './Chat.css';\nconst host = \"http://localhost:5001\";\n\nfunction Chat() {\n  _s();\n\n  const [mess, setMess] = useState([]);\n  const [message, setMessage] = useState('');\n  const [id, setId] = useState('');\n  const [activeChat, setActiveChat] = useState(true); // Assuming you have an active chat state\n\n  const [textMessage, setTextMessage] = useState(''); // Assuming you have textMessage state\n\n  const [category, setCategory] = useState('send'); // Assuming you have a category state\n\n  const socketRef = useRef();\n  const messagesEnd = useRef();\n  useEffect(() => {\n    socketRef.current = socketIOClient.connect(host);\n    socketRef.current.on('getId', data => {\n      setId(data);\n    });\n    socketRef.current.on('sendDataServer', dataGot => {\n      setMess(oldMsgs => [...oldMsgs, dataGot.data]);\n      scrollToBottom();\n    });\n    return () => {\n      socketRef.current.disconnect();\n    };\n  }, []);\n\n  const sendMessage = () => {\n    if (message !== null) {\n      const msg = {\n        content: message,\n        id: id\n      };\n      socketRef.current.emit('sendDataClient', msg);\n      setMessage('');\n    }\n  };\n\n  const scrollToBottom = () => {\n    messagesEnd.current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n\n  const handleChange = e => {\n    setMessage(e.target.value);\n  };\n\n  const onEnterPress = e => {\n    if (e.keyCode === 13 && e.shiftKey === false) {\n      sendMessage();\n    }\n  };\n\n  const handlerSend = () => {\n    const value = {\n      message: textMessage,\n      id_user: id,\n      category: category\n    };\n    socketRef.current.emit('send_message', value); // You may want to clear the input here or handle the sent message as needed\n\n    setTextMessage('');\n  };\n\n  const onChangeText = e => {\n    setTextMessage(e.target.value);\n  };\n\n  const onChat = () => {// Handle chat opening or any relevant functionality\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper_chat\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat_messenger\",\n          onClick: onChat\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), activeChat && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"active_chat animate__animated animate__jackInTheBox\",\n        children: [mess.map((m, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${m.id === id ? 'your-message' : 'other-people'} chat-item`,\n          children: m.content\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter Message!\",\n          onChange: onChangeText,\n          value: textMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlerSend,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Chat, \"hON6uBzzAftqqhO2ScLCnY8Y8dI=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Volumes/document/GitHub/ASM3/Frontend Assignment 03/client/src/Share/Chat/Chat.jsx"],"names":["React","useState","useEffect","useRef","socketIOClient","host","Chat","mess","setMess","message","setMessage","id","setId","activeChat","setActiveChat","textMessage","setTextMessage","category","setCategory","socketRef","messagesEnd","current","connect","on","data","dataGot","oldMsgs","scrollToBottom","disconnect","sendMessage","msg","content","emit","scrollIntoView","behavior","handleChange","e","target","value","onEnterPress","keyCode","shiftKey","handlerSend","id_user","onChangeText","onChat","map","m","index"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAO,YAAP;AAEA,MAAMC,IAAI,GAAG,uBAAb;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACd,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACU,EAAD,EAAKC,KAAL,IAAcX,QAAQ,CAAC,EAAD,CAA5B;AACA,QAAM,CAACY,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,IAAD,CAA5C,CAJc,CAIsC;;AACpD,QAAM,CAACc,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,EAAD,CAA9C,CALc,CAKsC;;AACpD,QAAM,CAACgB,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC,MAAD,CAAxC,CANc,CAMoC;;AAElD,QA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","sourcesContent":["// import React, { useState, useEffect, useRef } from \"react\";\n// import socketIOClient from \"socket.io-client\";\n// import './Chat.css'\n// const host = \"http://localhost:5001\";\n\n// function Chat() {\n//   const [mess, setMess] = useState([]);\n//   const [message, setMessage] = useState('');\n//   const [id, setId] = useState();\n\n//   const socketRef = useRef();\n//   const messagesEnd = useRef();\n\n//   useEffect(() => {\n//     socketRef.current = socketIOClient.connect(host)\n  \n//     socketRef.current.on('getId', data => {\n//       setId(data)\n//     })\n\n//     socketRef.current.on('sendDataServer', dataGot => {\n//       setMess(oldMsgs => [...oldMsgs, dataGot.data])\n//       scrollToBottom()\n//     })\n\n//     return () => {\n//       socketRef.current.disconnect();\n//     };\n//   }, []);\n\n//   const sendMessage = () => {\n//     if(message !== null) {\n//       const msg = {\n//         content: message, \n//         id: id\n//       }\n//       socketRef.current.emit('sendDataClient', msg)\n//       setMessage('')\n//     }\n//   }\n\n//   const scrollToBottom = () => {\n//     messagesEnd.current.scrollIntoView({ behavior: \"smooth\" });\n//   }\n\n//   const handleChange = (e) => {\n//     setMessage(e.target.value)\n//   }\n\n//   const onEnterPress = (e) => {\n//     if(e.keyCode == 13 && e.shiftKey == false) {\n//       sendMessage()\n//     }\n//   }\n\n\n//     return (\n//         <>\n//                 <div>\n//                     <div className=\"wrapper_chat\">\n//                         <div className=\"chat_messenger\" onClick={onChat}>\n//                             <svg x=\"0\" y=\"0\" width=\"60px\" height=\"60px\"><g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n//                                 <g>\n//                                     <circle fill=\"#383838\" cx=\"30\" cy=\"30\" r=\"30\"></circle>\n//                                     <svg x=\"10\" y=\"10\">\n//                                         <g transform=\"translate(0.000000, -10.000000)\" fill=\"#FFFFFF\">\n//                                             <g id=\"logo\" transform=\"translate(0.000000, 10.000000)\">\n//                                                 <path d=\"M20,0 C31.2666,0 40,8.2528 40,19.4 C40,30.5472 31.2666,38.8 \n//                                         20,38.8 C17.9763,38.8 16.0348,38.5327 14.2106,38.0311 C13.856,37.9335 13.4789,37.9612 \n//                                         13.1424,38.1098 L9.1727,39.8621 C8.1343,40.3205 6.9621,39.5819 6.9273,38.4474 L6.8184,34.8894 \n//                                         C6.805,34.4513 6.6078,34.0414 6.2811,33.7492 C2.3896,30.2691 0,25.2307 0,19.4 C0,8.2528 8.7334,0 \n//                                         20,0 Z M7.99009,25.07344 C7.42629,25.96794 8.52579,26.97594 9.36809,26.33674 L15.67879,21.54734 \n//                                         C16.10569,21.22334 16.69559,21.22164 17.12429,21.54314 L21.79709,25.04774 C23.19919,26.09944 \n//                                         25.20039,25.73014 26.13499,24.24744 L32.00999,14.92654 C32.57369,14.03204 31.47419,13.02404 \n//                                         30.63189,13.66324 L24.32119,18.45264 C23.89429,18.77664 23.30439,18.77834 22.87569,18.45674 \n//                                         L18.20299,14.95224 C16.80079,13.90064 14.79959,14.26984 13.86509,15.75264 L7.99009,25.07344 Z\">\n//                                                 </path>\n//                                             </g>\n//                                         </g>\n//                                     </svg>\n//                                 </g>\n//                             </g>\n//                             </svg>\n//                         </div>\n//                     </div>\n//                     {\n//                         activeChat && (\n//                             <div className='active_chat animate__animated animate__jackInTheBox'>\n//                                 <div style={{ width: '100%' }}>\n//                                     <div className=\"card card-bordered fix_boderChat\">\n//                                         <div className=\"card-header\">\n//                                             <h4 className=\"card-title\"><strong>Customer Support</strong></h4> <a className=\"btn btn-xs btn-secondary\" href=\"#\">Let's Chat App</a>\n//                                         </div>\n//                                         <div className=\"ps-container ps-theme-default ps-active-y fix_scoll\">\n//                                             {\n//                                                 message && message.map(value => (\n//                                                     value.category === 'send' ? (\n//                                                         <div className=\"media media-chat media-chat-reverse\" key={value.id}>\n//                                                             <div className=\"media-body\">\n//                                                                 <p>{value.message}</p>\n//                                                             </div>\n//                                                         </div>\n//                                                     ) : (\n//                                                         <div className=\"media media-chat\" key={value.id}> <img className=\"avatar\" src=\"https://img.icons8.com/color/36/000000/administrator-male.png\" alt=\"...\" />\n//                                                             <div className=\"media-body\" key={value.id}>\n//                                                                 <p>ADMIN: {value.message}</p>\n//                                                             </div>\n//                                                         </div>\n//                                                     )\n//                                                 ))\n//                                             }\n//                                         </div>\n//                                         <div className=\"publisher bt-1 border-light\">\n//                                             <img className=\"avatar avatar-xs\" src=\"https://img.icons8.com/color/36/000000/administrator-male.png\" alt=\"...\" />\n//                                             <input type=\"text\" placeholder=\"Enter Message!\" onChange={onChangeText} value={textMessage} />\n//                                             <span className=\"publisher-btn file-group\">\n//                                                 <i className=\"fa fa-paperclip file-browser\"></i>\n//                                                 <input type=\"file\" />\n//                                             </span>\n//                                             <a className=\"publisher-btn\" href=\"#\" data-abc=\"true\">\n//                                                 <i className=\"fa fa-smile\"></i>\n//                                             </a>\n//                                             <a onClick={handlerSend} className=\"publisher-btn text-info\" data-abc=\"true\">\n//                                                 <i className=\"fa fa-paper-plane\"></i>\n//                                             </a>\n//                                         </div>\n//                                     </div>\n//                                 </div>\n//                             </div>\n//                         )\n//                     }\n//                 </div>\n//         </>\n//     );\n// }\n\n// export default Chat;\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport './Chat.css';\n\nconst host = \"http://localhost:5001\";\n\nfunction Chat() {\n  const [mess, setMess] = useState([]);\n  const [message, setMessage] = useState('');\n  const [id, setId] = useState('');\n  const [activeChat, setActiveChat] = useState(true); // Assuming you have an active chat state\n  const [textMessage, setTextMessage] = useState(''); // Assuming you have textMessage state\n  const [category, setCategory] = useState('send'); // Assuming you have a category state\n\n  const socketRef = useRef();\n  const messagesEnd = useRef();\n\n  useEffect(() => {\n    socketRef.current = socketIOClient.connect(host);\n  \n    socketRef.current.on('getId', data => {\n      setId(data);\n    });\n\n    socketRef.current.on('sendDataServer', dataGot => {\n      setMess(oldMsgs => [...oldMsgs, dataGot.data]);\n      scrollToBottom();\n    });\n\n    return () => {\n      socketRef.current.disconnect();\n    };\n  }, []);\n\n  const sendMessage = () => {\n    if (message !== null) {\n      const msg = {\n        content: message,\n        id: id\n      }\n      socketRef.current.emit('sendDataClient', msg);\n      setMessage('');\n    }\n  }\n\n  const scrollToBottom = () => {\n    messagesEnd.current.scrollIntoView({ behavior: \"smooth\" });\n  }\n\n  const handleChange = (e) => {\n    setMessage(e.target.value);\n  }\n\n  const onEnterPress = (e) => {\n    if (e.keyCode === 13 && e.shiftKey === false) {\n      sendMessage();\n    }\n  }\n\n  const handlerSend = () => {\n    const value = {\n      message: textMessage,\n      id_user: id,\n      category: category\n    };\n    socketRef.current.emit('send_message', value);\n    // You may want to clear the input here or handle the sent message as needed\n    setTextMessage('');\n  }\n\n  const onChangeText = (e) => {\n    setTextMessage(e.target.value);\n  }\n\n  const onChat = () => {\n    // Handle chat opening or any relevant functionality\n  }\n\n  return (\n    <>\n      <div>\n        <div className=\"wrapper_chat\">\n          <div className=\"chat_messenger\" onClick={onChat}>\n            {/* Add your chat icon/svg */}\n          </div>\n        </div>\n        {activeChat && (\n          <div className='active_chat animate__animated animate__jackInTheBox'>\n            {/* Your chat interface and message rendering */}\n            {mess.map((m, index) => (\n              <div\n                key={index}\n                className={`${m.id === id ? 'your-message' : 'other-people'} chat-item`}\n              >\n                {m.content}\n              </div>\n            ))}\n            {/* Message input and send button */}\n            <input\n              type=\"text\"\n              placeholder=\"Enter Message!\"\n              onChange={onChangeText}\n              value={textMessage}\n            />\n            <button onClick={handlerSend}>Send</button>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}