{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Volumes/document/GitHub/ASM3/Frontend Assignment 03/client/src/Share/Chat/Chat.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nconst host = \"http://localhost:5001\";\n\nfunction Chat() {\n  _s();\n\n  const [room, setRoom] = useState(\"\");\n  const [mess, setMess] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const socketRef = useRef();\n  useEffect(() => {\n    socketRef.current = socketIOClient.connect(host);\n    socketRef.current.on(\"roomMessages\", messages => {\n      setMess(messages);\n    });\n    socketRef.current.on(\"sendDataServer\", dataGot => {\n      setMess(oldMsgs => [...oldMsgs, dataGot.data]);\n    });\n    return () => {\n      socketRef.current.disconnect();\n    };\n  }, []);\n\n  const joinRoom = () => {\n    if (room !== \"\") {\n      socketRef.current.emit(\"joinRoom\", room);\n    }\n  };\n\n  const sendMessage = () => {\n    if (message !== \"\") {\n      const msg = {\n        content: message\n      };\n      socketRef.current.emit(\"sendDataClient\", msg);\n      setMessage(\"\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Room Name\",\n        value: room,\n        onChange: e => setRoom(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: joinRoom,\n        children: \"Join Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: mess.map((value, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: value.content\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Message\",\n        value: message,\n        onChange: e => setMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chat, \"VGW5ptDZ/d5LVKZvqxTDd8XdNRA=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Volumes/document/GitHub/ASM3/Frontend Assignment 03/client/src/Share/Chat/Chat.jsx"],"names":["React","useState","useEffect","useRef","socketIOClient","host","Chat","room","setRoom","mess","setMess","message","setMessage","socketRef","current","connect","on","messages","dataGot","oldMsgs","data","disconnect","joinRoom","emit","sendMessage","msg","content","e","target","value","map","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport socketIOClient from \"socket.io-client\";\n\nconst host = \"http://localhost:5001\";\n\nfunction Chat() {\n  const [room, setRoom] = useState(\"\");\n  const [mess, setMess] = useState([]);\n  const [message, setMessage] = useState(\"\");\n\n  const socketRef = useRef();\n\n  useEffect(() => {\n    socketRef.current = socketIOClient.connect(host);\n\n    socketRef.current.on(\"roomMessages\", (messages) => {\n      setMess(messages);\n    });\n\n    socketRef.current.on(\"sendDataServer\", (dataGot) => {\n      setMess((oldMsgs) => [...oldMsgs, dataGot.data]);\n    });\n\n    return () => {\n      socketRef.current.disconnect();\n    };\n  }, []);\n\n  const joinRoom = () => {\n    if (room !== \"\") {\n      socketRef.current.emit(\"joinRoom\", room);\n    }\n  };\n\n  const sendMessage = () => {\n    if (message !== \"\") {\n      const msg = {\n        content: message,\n      };\n      socketRef.current.emit(\"sendDataClient\", msg);\n      setMessage(\"\");\n    }\n  };\n\n  return (\n    <div>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Enter Room Name\"\n          value={room}\n          onChange={(e) => setRoom(e.target.value)}\n        />\n        <button onClick={joinRoom}>Join Room</button>\n      </div>\n      <div>\n        {mess.map((value, index) => (\n          <div key={index}>{value.content}</div>\n        ))}\n      </div>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Enter Message\"\n          value={message}\n          onChange={(e) => setMessage(e.target.value)}\n        />\n        <button onClick={sendMessage}>Send Message</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}