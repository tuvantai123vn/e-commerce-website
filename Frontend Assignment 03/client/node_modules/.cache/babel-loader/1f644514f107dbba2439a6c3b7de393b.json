{"ast":null,"code":"const SemVer = require('../classes/semver');\n\nconst parse = (version, options, throwErrors = false) => {\n  if (version instanceof SemVer) {\n    return version;\n  }\n\n  try {\n    return new SemVer(version, options);\n  } catch (er) {\n    if (!throwErrors) {\n      return null;\n    }\n\n    throw er;\n  }\n};\n\nmodule.exports = parse;","map":{"version":3,"sources":["/Volumes/document/GitHub/ASM3/Frontend Assignment 03/client/node_modules/jsonwebtoken/node_modules/semver/functions/parse.js"],"names":["SemVer","require","parse","version","options","throwErrors","er","module","exports"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,mBAAD,CAAtB;;AACA,MAAMC,KAAK,GAAG,CAACC,OAAD,EAAUC,OAAV,EAAmBC,WAAW,GAAG,KAAjC,KAA2C;AACvD,MAAIF,OAAO,YAAYH,MAAvB,EAA+B;AAC7B,WAAOG,OAAP;AACD;;AACD,MAAI;AACF,WAAO,IAAIH,MAAJ,CAAWG,OAAX,EAAoBC,OAApB,CAAP;AACD,GAFD,CAEE,OAAOE,EAAP,EAAW;AACX,QAAI,CAACD,WAAL,EAAkB;AAChB,aAAO,IAAP;AACD;;AACD,UAAMC,EAAN;AACD;AACF,CAZD;;AAcAC,MAAM,CAACC,OAAP,GAAiBN,KAAjB","sourcesContent":["const SemVer = require('../classes/semver')\nconst parse = (version, options, throwErrors = false) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    if (!throwErrors) {\n      return null\n    }\n    throw er\n  }\n}\n\nmodule.exports = parse\n"]},"metadata":{},"sourceType":"script"}